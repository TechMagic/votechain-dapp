import { ethers } from "ethers";
import { useState } from 'react';
import './App.css';

function App() {
  // 1. 状态管理
  const [account, setAccount] = useState<string | null>(null); // 用户钱包地址
  const [isConnected, setIsConnected] = useState(false); // 是否连接钱包
  const [title, setTitle] = useState(''); // 投票标题
  const [duration, setDuration] = useState('600'); // 投票时长（秒），默认10分钟
  const [proposals, setProposals] = useState<string[]>(['']); // 投票选项列表
  const [contractAddress, setContractAddress] = useState<string | null>(null); // 部署后的合约地址
  const [isDeploying, setIsDeploying] = useState(false); // 是否正在部署

  // 2. 连接钱包
  const connectWallet = async () => {
    if (typeof window.ethereum === 'undefined') {
      alert('请安装 MetaMask 钱包！');
      return;
    }

    try {
      // 请求用户连接钱包
      const accounts = await window.ethereum.request({
        method: 'eth_requestAccounts',
      });
      setAccount(accounts[0]);
      setIsConnected(true);
    } catch (error) {
      console.error('连接钱包失败：', error);
      alert('连接钱包失败，请重试。');
    }
  };

  // 3. 添加一个投票选项
  const addProposal = () => {
    setProposals([...proposals, '']);
  };

  // 4. 更新某个选项的值
  const updateProposal = (index: number, value: string) => {
    const newProposals = [...proposals];
    newProposals[index] = value;
    setProposals(newProposals);
  };

  // 5. 删除某个选项
  const removeProposal = (index: number) => {
    if (proposals.length <= 1) return; // 至少保留一个
    const newProposals = [...proposals];
    newProposals.splice(index, 1);
    setProposals(newProposals);
  };

  // 6. createVote 函数
  const createVote = async () => {
    if (!isConnected) {
      alert('请先连接钱包！');
      return;
    }

    if (!title.trim()) {
      alert('请输入投票标题！');
      return;
    }

    if (proposals.some(p => !p.trim())) {
      alert('所有投票选项都不能为空！');
      return;
    }

    if (proposals.length < 2) {
      alert('至少需要两个投票选项！');
      return;
    }

    setIsDeploying(true);

    try {
      // ✅ 1. 从 MetaMask 获取 provider 和 signer（安全！）
      const provider = new ethers.BrowserProvider(window.ethereum);
      const signer = await provider.getSigner();

      // ✅ 2. 读取你之前部署的合约 ABI（从 artifacts 复制）
      // 👇 这是你的 Voting.sol 编译后的 ABI（从 hardhat compile 后的 artifacts 复制）
      const votingABI = [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_title",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_durationSeconds",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            }
          ],
          "name": "addProposal",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getProposalCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "name": "getProposal",
          "outputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "voteCount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getWinner",
          "outputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "voteCount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "title",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "votingActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalIndex",
              "type": "uint256"
            }
          ],
          "name": "vote",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ];

      // ✅ 3. 创建合约工厂（部署新合约）
      const votingFactory = new ethers.ContractFactory(
        votingABI,
        "0x608060405234801561000f575f5ffd5b50604051611a35380380611a3583398181016040528101906100319190610233565b335f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816001908161007f9190610494565b50804261008c9190610590565b600281905550600160035f6101000a81548160ff02191690831515021790555050506105c3565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610112826100cc565b810181811067ffffffffffffffff82111715610131576101306100dc565b5b80604052505050565b5f6101436100b3565b905061014f8282610109565b919050565b5f67ffffffffffffffff82111561016e5761016d6100dc565b5b610177826100cc565b9050602081019050919050565b8281835e5f83830152505050565b5f6101a461019f84610154565b61013a565b9050828152602081018484840111156101c0576101bf6100c8565b5b6101cb848285610184565b509392505050565b5f82601f8301126101e7576101e66100c4565b5b81516101f7848260208601610192565b91505092915050565b5f819050919050565b61021281610200565b811461021c575f5ffd5b50565b5f8151905061022d81610209565b92915050565b5f5f60408385031215610249576102486100bc565b5b5f83015167ffffffffffffffff811115610266576102656100c0565b5b610272858286016101d3565b92505060206102838582860161021f565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806102db57607f821691505b6020821081036102ee576102ed610297565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610315565b61035a8683610315565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61039561039061038b84610200565b610372565b610200565b9050919050565b5f819050919050565b6103ae8361037b565b6103c26103ba8261039c565b848454610321565b825550505050565b5f5f905090565b6103d96103ca565b6103e48184846103a5565b505050565b5b81811015610407576103fc5f826103d1565b6001810190506103ea565b5050565b601f82111561044c5761041d816102f4565b61042684610306565b81016020851015610435578190505b61044961044185610306565b8301826103e9565b50505b505050565b5f82821c905092915050565b5f61046c5f1984600802610451565b1980831691505092915050565b5f610484838361045d565b9150826002028217905092915050565b61049d8261028d565b67ffffffffffffffff8111156104b6576104b56100dc565b5b6104c082546102c4565b6104cb82828561040b565b5f60209050601f8311600181146104fc575f84156104ea578287015190505b6104f48582610479565b86555061055b565b601f19841661050a866102f4565b5f5b828110156105315784890151825560018201915060208501945060208101905061050c565b8683101561054e578489015161054a601f89168261045d565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61059a82610200565b91506105a583610200565b92508282019050808211156105bd576105bc610563565b5b92915050565b611465806105d05f395ff3fe608060405234801561000f575f5ffd5b50600436106100b2575f3560e01c80634a79d50c1161006f5780634a79d50c1461018b5780638da5cb5b146101a95780638e7ea5b2146101c7578063c08cc02d146101e6578063c3403ddf14610204578063c7f758a81461020e576100b2565b80630121b93f146100b6578063013cf08b146100d257806309eef43e146101035780632fdae3c5146101335780633197cbb61461014f578063408e27271461016d575b5f5ffd5b6100d060048036038101906100cb9190610a86565b61023f565b005b6100ec60048036038101906100e79190610a86565b610432565b6040516100fa929190610b30565b60405180910390f35b61011d60048036038101906101189190610bb8565b6104e7565b60405161012a9190610bfd565b60405180910390f35b61014d60048036038101906101489190610d42565b610504565b005b610157610640565b6040516101649190610d89565b60405180910390f35b610175610646565b6040516101829190610bfd565b60405180910390f35b610193610658565b6040516101a09190610da2565b60405180910390f35b6101b16106e4565b6040516101be9190610dd1565b60405180910390f35b6101cf610708565b6040516101dd929190610b30565b60405180910390f35b6101ee610884565b6040516101fb9190610d89565b60405180910390f35b61020c610890565b005b61022860048036038101906102239190610a86565b610939565b604051610236929190610b30565b60405180910390f35b60035f9054906101000a900460ff1661028d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028490610e34565b60405180910390fd5b60025442106102d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c890610e9c565b60405180910390fd5b60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561035b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035290610f04565b60405180910390fd5b60058054905081106103a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039990610f6c565b60405180910390fd5b600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506005818154811061040b5761040a610f8a565b5b905f5260205f2090600202016001015f81548092919061042a90610fe4565b919050555050565b60058181548110610441575f80fd5b905f5260205f2090600202015f91509050805f01805461046090611058565b80601f016020809104026020016040519081016040528092919081815260200182805461048c90611058565b80156104d75780601f106104ae576101008083540402835291602001916104d7565b820191905f5260205f20905b8154815290600101906020018083116104ba57829003601f168201915b5050505050908060010154905082565b6004602052805f5260405f205f915054906101000a900460ff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610592576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610589906110d2565b60405180910390fd5b60035f9054906101000a900460ff166105e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d790610e34565b60405180910390fd5b600560405180604001604052808381526020015f815250908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f0190816106309190611290565b5060208201518160010155505050565b60025481565b60035f9054906101000a900460ff1681565b6001805461066590611058565b80601f016020809104026020016040519081016040528092919081815260200182805461069190611058565b80156106dc5780601f106106b3576101008083540402835291602001916106dc565b820191905f5260205f20905b8154815290600101906020018083116106bf57829003601f168201915b505050505081565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60605f600254421015610750576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610747906113a9565b60405180910390fd5b5f5f90505f5f90505f5f90505b6005805490508110156107cc57826005828154811061077f5761077e610f8a565b5b905f5260205f2090600202016001015411156107bf57600581815481106107a9576107a8610f8a565b5b905f5260205f2090600202016001015492508091505b808060010191505061075d565b50600581815481106107e1576107e0610f8a565b5b905f5260205f2090600202015f01828180546107fc90611058565b80601f016020809104026020016040519081016040528092919081815260200182805461082890611058565b80156108735780601f1061084a57610100808354040283529160200191610873565b820191905f5260205f20905b81548152906001019060200180831161085657829003601f168201915b505050505091509350935050509091565b5f600580549050905090565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461091e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610915906110d2565b60405180910390fd5b5f60035f6101000a81548160ff021916908315150217905550565b60605f6005805490508310610983576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097a90611411565b60405180910390fd5b5f6005848154811061099857610997610f8a565b5b905f5260205f2090600202019050805f0181600101548180546109ba90611058565b80601f01602080910402602001604051908101604052809291908181526020018280546109e690611058565b8015610a315780601f10610a0857610100808354040283529160200191610a31565b820191905f5260205f20905b815481529060010190602001808311610a1457829003601f168201915b505050505091509250925050915091565b5f604051905090565b5f5ffd5b5f5ffd5b5f819050919050565b610a6581610a53565b8114610a6f575f5ffd5b50565b5f81359050610a8081610a5c565b92915050565b5f60208284031215610a9b57610a9a610a4b565b5b5f610aa884828501610a72565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610af382610ab1565b610afd8185610abb565b9350610b0d818560208601610acb565b610b1681610ad9565b840191505092915050565b610b2a81610a53565b82525050565b5f6040820190508181035f830152610b488185610ae9565b9050610b576020830184610b21565b9392505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b8782610b5e565b9050919050565b610b9781610b7d565b8114610ba1575f5ffd5b50565b5f81359050610bb281610b8e565b92915050565b5f60208284031215610bcd57610bcc610a4b565b5b5f610bda84828501610ba4565b91505092915050565b5f8115159050919050565b610bf781610be3565b82525050565b5f602082019050610c105f830184610bee565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610c5482610ad9565b810181811067ffffffffffffffff82111715610c7357610c72610c1e565b5b80604052505050565b5f610c85610a42565b9050610c918282610c4b565b919050565b5f67ffffffffffffffff821115610cb057610caf610c1e565b5b610cb982610ad9565b9050602081019050919050565b828183375f83830152505050565b5f610ce6610ce184610c96565b610c7c565b905082815260208101848484011115610d0257610d01610c1a565b5b610d0d848285610cc6565b509392505050565b5f82601f830112610d2957610d28610c16565b5b8135610d39848260208601610cd4565b91505092915050565b5f60208284031215610d5757610d56610a4b565b5b5f82013567ffffffffffffffff811115610d7457610d73610a4f565b5b610d8084828501610d15565b91505092915050565b5f602082019050610d9c5f830184610b21565b92915050565b5f6020820190508181035f830152610dba8184610ae9565b905092915050565b610dcb81610b7d565b82525050565b5f602082019050610de45f830184610dc2565b92915050565b7f566f74696e67206973206e6f74206163746976650000000000000000000000005f82015250565b5f610e1e601483610abb565b9150610e2982610dea565b602082019050919050565b5f6020820190508181035f830152610e4b81610e12565b9050919050565b7f566f74696e672068617320656e646564000000000000000000000000000000005f82015250565b5f610e86601083610abb565b9150610e9182610e52565b602082019050919050565b5f6020820190508181035f830152610eb381610e7a565b9050919050565b7f596f7520616c726561647920766f7465640000000000000000000000000000005f82015250565b5f610eee601183610abb565b9150610ef982610eba565b602082019050919050565b5f6020820190508181035f830152610f1b81610ee2565b9050919050565b7f496e76616c69642070726f706f73616c000000000000000000000000000000005f82015250565b5f610f56601083610abb565b9150610f6182610f22565b602082019050919050565b5f6020820190508181035f830152610f8381610f4a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610fee82610a53565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036110205761101f610fb7565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061106f57607f821691505b6020821081036110825761108161102b565b5b50919050565b7f4e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f6110bc600983610abb565b91506110c782611088565b602082019050919050565b5f6020820190508181035f8301526110e9816110b0565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261114c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611111565b6111568683611111565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61119161118c61118784610a53565b61116e565b610a53565b9050919050565b5f819050919050565b6111aa83611177565b6111be6111b682611198565b84845461111d565b825550505050565b5f5f905090565b6111d56111c6565b6111e08184846111a1565b505050565b5b81811015611203576111f85f826111cd565b6001810190506111e6565b5050565b601f82111561124857611219816110f0565b61122284611102565b81016020851015611231578190505b61124561123d85611102565b8301826111e5565b50505b505050565b5f82821c905092915050565b5f6112685f198460080261124d565b1980831691505092915050565b5f6112808383611259565b9150826002028217905092915050565b61129982610ab1565b67ffffffffffffffff8111156112b2576112b1610c1e565b5b6112bc8254611058565b6112c7828285611207565b5f60209050601f8311600181146112f8575f84156112e6578287015190505b6112f08582611275565b865550611357565b601f198416611306866110f0565b5f5b8281101561132d57848901518255600182019150602085019450602081019050611308565b8683101561134a5784890151611346601f891682611259565b8355505b6001600288020188555050505b505050505050565b7f566f74696e67206e6f7420656e646564207965740000000000000000000000005f82015250565b5f611393601483610abb565b915061139e8261135f565b602082019050919050565b5f6020820190508181035f8301526113c081611387565b9050919050565b7f496e76616c696420696e646578000000000000000000000000000000000000005f82015250565b5f6113fb600d83610abb565b9150611406826113c7565b602082019050919050565b5f6020820190508181035f830152611428816113ef565b905091905056fea2646970667358221220a668413395951640ffa7b08054c40ff17fdb411c459e2d1c3d60ac24516962a364736f6c634300081c0033",
        signer
      );

      // ✅ 4. 部署合约（用户钱包签名）
      const voting = await votingFactory.deploy(title, parseInt(duration));
      await voting.waitForDeployment();

      // ✅ 5. 显示成功
      setContractAddress(voting.target);
      alert(`投票创建成功！合约地址：${voting.target}`);

    } catch (error: any) {
      console.error("💥 部署失败详情：", error);
      alert(`部署失败：${error.message || '未知错误，请查看控制台'}\n\n请检查：\n1. 钱包是否连接\n2. 是否有足够 Sepolia ETH\n3. 是否输入了有效选项`);
    } finally {
      setIsDeploying(false);
    }
  };


  return (
    <div className="App">
      <header className="App-header">
        <h1>🗳️ VoteChain - 去中心化投票系统</h1>

        {/* 钱包连接按钮 */}
        {!isConnected ? (
          <button onClick={connectWallet} className="btn-connect">
            连接 MetaMask 钱包
          </button>
        ) : (
          <div className="wallet-info">
            已连接：{account?.slice(0, 6)}...{account?.slice(-4)}
          </div>
        )}

        {/* 如果未连接钱包，不显示表单 */}
        {isConnected && (
          <>
            {/* 投票标题和时长 */}
            <div className="form-group">
              <label>投票标题：</label>
              <input
                type="text"
                value={title}
                onChange={(e) => setTitle(e.target.value)}
                placeholder="例如：2025 年最佳水果评选"
              />
            </div>

            <div className="form-group">
              <label>投票时长（秒）：</label>
              <input
                type="number"
                value={duration}
                onChange={(e) => setDuration(e.target.value)}
                min="60"
                step="60"
              />
              <small>默认 600 秒（10分钟）</small>
            </div>

            {/* 投票选项 */}
            <div className="form-group">
              <label>投票选项：</label>
              {proposals.map((proposal, index) => (
                <div key={index} className="proposal-item">
                  <input
                    type="text"
                    value={proposal}
                    onChange={(e) => updateProposal(index, e.target.value)}
                    placeholder={`选项 ${index + 1}，例如：苹果`}
                  />
                  {proposals.length > 1 && (
                    <button
                      onClick={() => removeProposal(index)}
                      className="btn-remove"
                    >
                      删除
                    </button>
                  )}
                </div>
              ))}
              <button onClick={addProposal} className="btn-add">
                + 添加选项
              </button>
            </div>

            {/* 创建投票按钮 */}
            <button
              onClick={createVote}
              disabled={isDeploying}
              className="btn-deploy"
            >
              {isDeploying ? '⏳ 创建中...' : '✅ 创建投票'}
            </button>

            {/* 显示合约地址 */}
            {contractAddress && (
              <div className="contract-address">
                <strong>合约已部署！</strong>
                <br />
                <a
                  href={`https://sepolia.etherscan.io/address/0x8310E624a79A4cCd060fBb11b2C3e06cd6ED3408`}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  查看合约（Etherscan）
                </a>
                <br />
                <code>{contractAddress}</code>
              </div>
            )}
          </>
        )}
      </header>
    </div>
  );
}

export default App;

